configs:
  loki_config:
    content: |
      auth_enabled: false
      server:
        http_listen_port: 3100
      common:
        instance_addr: 127.0.0.1
        path_prefix: /loki
        storage:
          filesystem:
            chunks_directory: /loki/chunks
            rules_directory: /loki/rules
        replication_factor: 1
        ring:
          kvstore:
            store: inmemory
      schema_config:
        configs:
          - from: 2020-01-01
            store: tsdb
            object_store: filesystem
            schema: v13
            index:
              prefix: index_
              period: 24h
  prometheus_config:
    content: |
      global:
        scrape_interval: 15s
      scrape_configs:
        - job_name: docker
          docker_sd_configs:
            - host: tcp://docker-proxy:2375
              filters:
                - name: label
                  values: ["prometheus.port"]
          relabel_configs:
            - source_labels: [__meta_docker_container_label_com_docker_compose_service,__meta_docker_container_label_prometheus_port]
              target_label: __address__
              separator: '@'
              regex: (.+)@(.+)
              replacement: $${1}:$${2}
            - regex: __meta_docker_container_label_prometheus_label_(.+)
              action: labelmap
        - job_name: machines
          static_configs:
            - targets: ["${DESKTOP_HOST}:9100", "${DESKTOP_HOST}:9882"]
              labels:
                instance: "desktop"
            - targets: ["${SERVER_HOST}:9100", "${SERVER_HOST}:9882"]
              labels:
                instance: "docker-prod-1"
        - job_name: "pikvm"
          metrics_path: "/api/export/prometheus/metrics"
          basic_auth:
            username: ${KVM_USERNAME}
            password: "${KVM_PASSWORD}"
          scheme: https
          static_configs:
            - targets: ["${KVM_HOST}"]
              labels:
                instance: "truenas-server"
          tls_config:
            insecure_skip_verify: true # For self-signed certificate
  promtail_config:
    content: |
      positions:
        filename: /promtail/positions.yaml
      clients:
        - url: http://loki:3100/loki/api/v1/push
      scrape_configs:
        - job_name: docker
          docker_sd_configs:
            - host: tcp://docker-proxy:2375
          relabel_configs:
            - source_labels: [__meta_docker_container_name]
              regex: '/(.*)'
              target_label: container
            - source_labels: [__meta_docker_container_label_com_docker_compose_project]
              regex: '(.+)'
              target_label: stack
        - job_name: syslog
          syslog:
            listen_address: 0.0.0.0:1514
            labels:
              job: syslog
          relabel_configs:
            - source_labels: [__syslog_message_hostname]
              target_label: host
            - source_labels: [__syslog_message_hostname]
              target_label: hostname
            - source_labels: [__syslog_message_hostname]
              target_label: instance
              regex: ^nas$
              replacement: truenas-server
            - source_labels: [__syslog_message_severity]
              target_label: level
            - source_labels: [__syslog_message_app_name]
              target_label: application
            - source_labels: [__syslog_message_facility]
              target_label: facility
            - source_labels: [__syslog_connection_hostname]
              target_label: connection_hostname
name: prometheus
networks:
  prometheus:
    name: prometheus
  traefik:
    external: True
services:
  cadvisor:
    command:
      - --housekeeping_interval=5s
      - --docker_only=true
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:latest
    labels:
      prometheus.label.instance: truenas-server
      prometheus.port: 8080
    networks:
      - prometheus
    pull_policy: always
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
  docker-proxy:
    environment:
      CONTAINERS: '1'
      NETWORKS: '1'
    image: lscr.io/linuxserver/socket-proxy:latest
    networks:
      - prometheus
    pull_policy: always
    read_only: True
    restart: unless-stopped
    tmpfs:
      - /run
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
  graphite:
    container_name: graphite-exporter
    image: ghcr.io/supporterino/truenas-graphite-to-prometheus:latest
    labels:
      prometheus.label.instance: truenas-server
      prometheus.port: 9108
    networks:
      - prometheus
    ports:
      - '9109:9109'
    pull_policy: always
    restart: unless-stopped
  loki:
    command: -config.file=/etc/loki/config.yaml
    configs:
      - source: loki_config
        target: /etc/loki/config.yaml
    container_name: loki
    image: grafana/loki:latest
    networks:
      - prometheus
      - traefik
    pull_policy: always
    restart: unless-stopped
    user: '568:568'
    volumes:
      - /mnt/pool0/apps/loki:/loki
  nut:
    command:
      - '--nut.server=host.docker.internal'
      - '--nut.vars_enable=battery.charge,battery.runtime,battery.voltage,battery.voltage.nominal,input.voltage,input.voltage.nominal,output.voltage,output.voltage.nominal,ups.beeper.status,ups.load,ups.realpower.nominal,ups.status'
    container_name: nut-exporter
    extra_hosts:
      - host.docker.internal:host-gateway
    image: ghcr.io/druggeri/nut_exporter:latest
    labels:
      homepage.group: Status
      homepage.icon: nut.png
      homepage.name: UPS
      homepage.widget.metrics[0].format.type: percent
      homepage.widget.metrics[0].label: Battery
      homepage.widget.metrics[0].query: network_ups_tools_battery_charge
      homepage.widget.metrics[1].format.suffix: W
      homepage.widget.metrics[1].format.type: number
      homepage.widget.metrics[1].label: Load
      homepage.widget.metrics[1].query: (network_ups_tools_ups_load / 100) * network_ups_tools_ups_realpower_nominal
      homepage.widget.metrics[2].format.type: duration
      homepage.widget.metrics[2].label: Runtime
      homepage.widget.metrics[2].query: network_ups_tools_battery_runtime
      homepage.widget.type: prometheusmetric
      homepage.widget.url: http://prometheus:9090
      prometheus.label.instance: ups
      prometheus.label.__metrics_path__: /ups_metrics
      prometheus.label.__param_ups: ups
      prometheus.port: 9199
    networks:
      - prometheus
    pull_policy: always
    restart: unless-stopped
  omada:
    container_name: omada-exporter
    environment:
      OMADA_HOST: ${OMADA_HOST}
      OMADA_PASS: ${OMADA_PASS}
      OMADA_SITE: Home
      OMADA_USER: ${OMADA_USER}
    image: ghcr.io/charlie-haley/omada_exporter:latest
    labels:
      prometheus.label.instance: omada
      prometheus.port: 9202
    networks:
      - prometheus
    pull_policy: always
    restart: unless-stopped
  prometheus:
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml
    container_name: prometheus
    depends_on:
      - docker-proxy
    image: prom/prometheus:latest
    labels:
      homepage.group: Network
      homepage.href: https://${HOST}
      homepage.icon: prometheus.png
      homepage.name: Prometheus
      homepage.widget.type: prometheus
      homepage.widget.url: http://prometheus:9090
      prometheus.label.instance: truenas-server
      prometheus.port: 9090
      traefik.enable: True
      traefik.http.routers.prometheus.rule: Host(`${HOST}`)
      traefik.http.routers.prometheus.tls.certresolver: myresolver
    networks:
      - prometheus
      - traefik
    pull_policy: always
    restart: unless-stopped
    user: '568:568'
    volumes:
      - /mnt/pool0/apps/prometheus:/prometheus
  promtail:
    command: -config.file=/etc/promtail/config.yaml
    configs:
      - source: promtail_config
        target: /etc/promtail/config.yaml
    container_name: promtail
    depends_on:
      - loki
    image: grafana/promtail:latest
    networks:
      - prometheus
    ports:
      - '1514:1514'
    pull_policy: always
    restart: unless-stopped
    user: '568:568'
    volumes:
      - /mnt/.ix-apps/docker/containers:/var/lib/docker/containers:ro
      - /mnt/pool0/apps/promtail:/promtail
  speedtest:
    container_name: speedtest-exporter
    healthcheck:
      disable: True
    image: docker.io/miguelndecarvalho/speedtest-exporter:latest
    labels:
      homepage.group: Status
      homepage.icon: myspeed.png
      homepage.name: Internet
      homepage.widget.metrics[0].format.type: bitrate
      homepage.widget.metrics[0].label: Download
      homepage.widget.metrics[0].query: last_over_time(speedtest_download_bits_per_second[24h])
      homepage.widget.metrics[1].format.type: bitrate
      homepage.widget.metrics[1].label: Upload
      homepage.widget.metrics[1].query: last_over_time(speedtest_upload_bits_per_second[24h])
      homepage.widget.type: prometheusmetric
      homepage.widget.url: http://prometheus:9090
      prometheus.label.instance: truenas-server
      prometheus.label.__scrape_interval__: 1h
      prometheus.label.__scrape_timeout__: 2m
      prometheus.port: 9798
    networks:
      - prometheus
    pull_policy: always
    restart: unless-stopped
