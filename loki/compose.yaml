configs:
  loki_config:
    content: |
      auth_enabled: false
      server:
        http_listen_port: 3100
      common:
        instance_addr: 127.0.0.1
        path_prefix: /loki
        storage:
          filesystem:
            chunks_directory: /loki/chunks
            rules_directory: /loki/rules
        replication_factor: 1
        ring:
          kvstore:
            store: inmemory
      schema_config:
        configs:
          - from: 2020-01-01
            store: tsdb
            object_store: filesystem
            schema: v13
            index:
              prefix: index_
              period: 24h
  promtail_config:
    content: |
      positions:
        filename: /promtail/positions.yaml
      clients:
        - url: http://loki:3100/loki/api/v1/push
      scrape_configs:
        - job_name: docker
          docker_sd_configs:
            - host: tcp://docker-proxy:2375
          relabel_configs:
            - source_labels: [__meta_docker_container_name]
              regex: '/(.*)'
              target_label: container
            - source_labels: [__meta_docker_container_label_com_docker_compose_project]
              regex: '(.+)'
              target_label: stack
        - job_name: syslog
          syslog:
            listen_address: 0.0.0.0:1514
            labels:
              job: syslog
          relabel_configs:
            - source_labels: [__syslog_message_hostname]
              target_label: host
            - source_labels: [__syslog_message_hostname]
              target_label: hostname
            - source_labels: [__syslog_message_hostname]
              target_label: instance
              regex: ^nas$
              replacement: truenas-server
            - source_labels: [__syslog_message_severity]
              target_label: level
            - source_labels: [__syslog_message_app_name]
              target_label: application
            - source_labels: [__syslog_message_facility]
              target_label: facility
            - source_labels: [__syslog_connection_hostname]
              target_label: connection_hostname
name: loki
networks:
  loki:
    name: loki
  traefik:
    external: True
services:
  docker-proxy:
    environment:
      CONTAINERS: '1'
    image: lscr.io/linuxserver/socket-proxy:latest
    networks:
      - loki
    pull_policy: always
    read_only: True
    restart: unless-stopped
    tmpfs:
      - /run
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
  loki:
    command: -config.file=/etc/loki/config.yaml
    configs:
      - source: loki_config
        target: /etc/loki/config.yaml
    container_name: loki
    image: grafana/loki:latest
    labels:
      prometheus.label.instance: truenas-server
      prometheus.port: 3100
    networks:
      - loki
      - traefik
    pull_policy: always
    restart: unless-stopped
    user: '568:568'
    volumes:
      - /mnt/pool0/apps/loki:/loki
  promtail:
    command: -config.file=/etc/promtail/config.yaml
    configs:
      - source: promtail_config
        target: /etc/promtail/config.yaml
    container_name: promtail
    depends_on:
      - docker-proxy
      - loki
    image: grafana/promtail:latest
    labels:
      homepage.group: Network
      homepage.href: https://${PROMTAIL_HOST}
      homepage.icon: loki.png
      homepage.name: Promtail
      homepage.showStats: true
      prometheus.label.instance: truenas-server
      prometheus.port: 80
      traefik.enable: True
      traefik.http.routers.promtail.rule: Host(`${PROMTAIL_HOST}`)
      traefik.http.routers.promtail.tls.certresolver: myresolver
      traefik.http.services.promtail.loadbalancer.server.port: 80
    networks:
      - loki
      - traefik
    ports:
      - '1514:1514'
    pull_policy: always
    restart: unless-stopped
    user: '568:568'
    volumes:
      - /mnt/.ix-apps/docker/containers:/var/lib/docker/containers:ro
      - /mnt/pool0/apps/promtail:/promtail
