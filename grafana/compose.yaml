configs:
  loki_config:
    content: |
      auth_enabled: false
      server:
        http_listen_port: 3100
      common:
        instance_addr: 127.0.0.1
        path_prefix: /loki
        storage:
          filesystem:
            chunks_directory: /loki/chunks
            rules_directory: /loki/rules
        replication_factor: 1
        ring:
          kvstore:
            store: inmemory
      schema_config:
        configs:
          - from: 2020-01-01
            store: tsdb
            object_store: filesystem
            schema: v13
            index:
              prefix: index_
              period: 24h
  prometheus_config:
    content: |
      storage:
        tsdb:
          out_of_order_time_window: 1h
networks:
  ingress:
    external: True
  observe:
    external: True
services:
  grafana:
    container_name: grafana
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_SECURITY_ALLOW_EMBEDDING: true
      GF_SERVER_ROOT_URL: https://${HOST}
    image: grafana/grafana-oss:${GRAFANA_IMAGE_TAG:-latest}
    labels:
      homepage.group: Network
      homepage.name: Grafana
      homepage.href: https://${HOST}
      homepage.icon: grafana.png
      homepage.widget.type: grafana
      homepage.widget.version: 2
      homepage.widget.url: http://grafana:3000
      homepage.widget.username: ${USERNAME}
      homepage.widget.password: ${PASSWORD}
      traefik.enable: true
      traefik.http.routers.grafana.rule: Host(`${HOST}`)
      traefik.http.routers.grafana.tls.certresolver: myresolver
    networks:
      - ingress
      - observe
    pull_policy: always
    restart: unless-stopped
    user: "568:568"
    volumes:
      - /mnt/pool0/containers/grafana:/var/lib/grafana
  loki:
    command: -config.file=/etc/loki/config.yaml
    configs:
      - source: loki_config
        target: /etc/loki/config.yaml
    container_name: loki
    image: grafana/loki:${LOKI_IMAGE_TAG:-latest}
    labels:
      prometheus.label.instance: truenas-server
      prometheus.port: 3100
    networks:
      - observe
    pull_policy: always
    restart: unless-stopped
    user: '568:568'
    volumes:
      - /mnt/pool0/containers/loki:/loki
  prometheus:
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-remote-write-receiver'
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml
    container_name: prometheus
    image: prom/prometheus:${PROMETHEUS_IMAGE_TAG:-latest}
    labels:
      prometheus.label.instance: truenas-server
      prometheus.port: 9090
    networks:
      - observe
    pull_policy: always
    restart: unless-stopped
    user: '568:568'
    volumes:
      - /mnt/pool0/containers/prometheus:/prometheus
