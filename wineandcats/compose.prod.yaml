name: wineandcats-prod
networks:
  default:
    name: wineandcats-prod
  ingress:
    external: True
services:
  app:
    container_name: wineandcats-prod
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://gomp:${DB_PASSWORD}@db/gomp?sslmode=disable
      SECURE_KEY: ${SECURE_KEY}
    labels:
      homepage.group: Other
      homepage.name: Wine & Cats
      homepage.href: https://${HOST}
      homepage.icon: https://${HOST}/static/assets/icon/icon192.png
      traefik.enable: true
      traefik.http.routers.wineandcats-prod.rule: Host(`${HOST}`)
      traefik.http.routers.wineandcats-prod.tls.certresolver: myresolver
    image: ghcr.io/chadweimer/gomp:3.9.2
    networks:
      - default
      - ingress
    restart: unless-stopped
    user: "568:568"
    volumes:
      - /mnt/pool0/containers/wineandcats-prod/app:/var/app/gomp/data
  db:
    container_name: wineandcats-prod-db
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: gomp
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "gomp"]
      interval: 10s
      timeout: 30s
      retries: 5
    image: postgres:${PG_VERSION}
    networks:
      - default
    pull_policy: always
    restart: unless-stopped
    volumes:
      - /mnt/pool0/containers/wineandcats-prod/pg${PG_VERSION}/data:/var/lib/postgresql/data
