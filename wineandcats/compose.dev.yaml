name: wineandcats-${STAGE}
networks:
  default:
    name: wineandcats-${STAGE}
  public:
    external: true

services:
  app:
    container_name: wineandcats-${STAGE}
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://gomp:${DB_PASSWORD}@db/gomp?sslmode=disable
      IS_DEVELOPMENT: 1
      SECURE_KEY: ${SECURE_KEY}
    image: ghcr.io/chadweimer/gomp:${IMAGE_TAG:-beta}
    labels:
      - traefik.enable=true
      - traefik.http.routers.wineandcats-${STAGE}.rule=Host(`${HOST}`)
      - traefik.http.routers.wineandcats-${STAGE}.tls.certresolver=myresolver
    networks:
      - default
      - public
    pull_policy: always
    restart: unless-stopped
    user: '568:568'
    volumes:
      - /mnt/pool0/containers/wineandcats-${STAGE}/app:/var/app/gomp/data
  db:
    container_name: wineandcats-${STAGE}-db
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: gomp
    healthcheck:
      start_period: 5s
      test: ['CMD-SHELL', 'pg_isready', '-d', 'gomp']
    image: postgres:${PG_VERSION}
    networks:
      - default
    pull_policy: always
    restart: unless-stopped
    volumes:
      - /mnt/pool0/containers/wineandcats-${STAGE}/pg${PG_VERSION}/data:/var/lib/postgresql/data
